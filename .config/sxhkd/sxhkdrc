#
# wm independent hotkeys
#

# terminal emulator
super + Return
	alacritty

# program launcher
super + @space
	rofi -show drun -show-icons -m -1 -config ~/.config/rofi/keybinding.rasi

# Show help
super + slash
	~/scripts/sxhkd-help.sh

# Generate random password and put to clipboard
super + p
	~/scripts/generate_random_password.sh | xclip -selection clipboard

# Search Google for results
super + g
	~/scripts/search_google.sh

# Search YouTube for results
super + y
	~/scripts/search_youtube.sh

# Audio 
XF86AudioRaiseVolume
	active_sink=$(pacmd list-sinks | awk '/* index:/\{print $3\}'); \
	pactl set-sink-volume $active_sink +5%; \
	vol=$(pacmd list-sinks | rg '^\t+volume:' | cut -d'/' -f2); \
	dunstify -r 42 "$vol";

XF86AudioLowerVolume
	active_sink=$(pacmd list-sinks | awk '/* index:/\{print $3\}'); \
	pactl set-sink-volume $active_sink -5%; \
	vol=$(pacmd list-sinks | rg '^\t+volume:' | cut -d'/' -f2); \
	dunstify -r 42 "$vol";

XF86AudioMute
	active_sink=$(pacmd list-sinks | awk '/* index:/\{print $3\}'); \
	pactl set-sink-mute $active_sink toggle;

# Brightness
XF86MonBrightnessUp
	xbacklight -inc 10;

XF86MonBrightnessDown
	xbacklight -dec 10;

super + XF86MonBrightnessUp
	xbacklight -inc 1;

super + XF86MonBrightnessDown
	xbacklight -dec 1;

super + b
	~/.local/bin/toggle_picom.sh;

# Send to desktop
# super + shift + {1-9,0}
#     bspc node -d '^{1-9,10}' --follow

# Send to monitor
# super + shift + equal
#     bspc node -m last --follow

#
# bspwm hotkeys
#

# Hide/Unhide Window
super + shift + i
	~/.local/bin/winhide


# quit/restart bspwm
super + {Escape,r}
	bspc {quit,wm -r}

# make sxhkd reload its configuration files:
super + alt + r
	pkill -USR1 -x sxhkd && dunstify "sxhkd reloaded"

# shutdown/reboot
super + {_,shift + }Delete
	{poweroff, reboot}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
# super + y
#	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
# super + g
# 	bspc node -s biggest.window

#
# state/flags
#
# toggle float
#super + f
#    bspc node focused -t \~floating

# set the window state
#super + {t,shift + t,s,f}
#	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# Toggle full screen
super + f
	bspc node -t \~fullscreen

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
#super + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# move node to next/previous desktop 
super + shift + bracket{left,right}
	bspc node -d {prev,next}.local

# focus the last node
super + grave
	bspc {node,desktop} -f last

# focus next monitor
super + Tab
	bspc monitor -f next

# send to next monitor
super + shift + Tab
	bspc node -m next

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-8}
	bspc {desktop -f,node -d} '{1-8}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

# Expand/contract a window by moving one of its side outward/inward
super + s : {h,j,k,l}
	STEP=20; SELECTION={1,2,3,4}; \
	bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
	bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)


